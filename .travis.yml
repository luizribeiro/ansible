---
sudo: required
dist: bionic

language: python
python: "3.8"

cache:
  bundler: true
  pip: true
  directories:
    - $HOME/.cache
    - $HOME/.vagrant.d/boxes
    - $TRAVIS_BUILD_DIR/.venv

branches:
  only:
    - master

git:
  # handle submodules ourselves so we use https instead of ssh on Travis
  submodules: false

before_install:
  - export PIPENV_IGNORE_VIRTUALENVS=1
  - export PIPENV_VENV_IN_PROJECT=1
  - export VAGRANT_DEFAULT_PROVIDER=libvirt
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init
  - sudo apt-get update -qq

install:
  # install libvrt & KVM
  - >-
    sudo apt-get update &&
    sudo apt-get install -y bridge-utils dnsmasq-base ebtables libvirt-bin
    libvirt-dev qemu-kvm qemu-utils ruby-dev
  - sudo chmod -R a+rwx /var/run/libvirt

  # install vagrant
  - >-
    wget -nv
    https://releases.hashicorp.com/vagrant/2.2.9/vagrant_2.2.9_x86_64.deb
  - sudo dpkg -i vagrant_2.2.9_x86_64.deb
  - vagrant plugin install vagrant-libvirt

  # setup project dependencies
  - pip install -Iv pipenv==2020.6.2
  - pipenv install -d
  - pipenv run ansible-galaxy install -r requirements.yml

script:
  # run lint against all playbooks
  - pipenv run ansible-lint site.yaml
  - pipenv run ansible-lint macbook.yaml
  - pipenv run ansible-lint grissom.yaml
  - pipenv run ansible-lint openwrt.yaml
  - pipenv run ansible-lint ec2.yaml
  - pipenv run yamllint .

  # run python checks
  - pipenv run pyre --noninteractive

  # test server role
  - cd roles/server/
  - pipenv run molecule test

  # test pihole role
  - cd ../roles/pihole/
  - pipenv run molecule test
