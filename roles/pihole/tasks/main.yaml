---
- name: Install pi-hole-server
  become: true
  become_user: aur_builder
  aur:
    name: pi-hole-server
    state: present
  tags: packages
- name: Setup pihole configuration
  copy:
    src: files/etc/pihole/setupVars.conf
    dest: /etc/pihole/setupVars.conf
    owner: pihole
    mode: u=rw,g=r,o=r
    directory_mode: u=rwx,g=rx,o=rx
  notify: restart pihole-FTL
  tags: configuration
- name: Setup pihole lists
  copy:
    src: "files/etc/pihole/{{ item }}"
    dest: "/etc/pihole/{{ item }}"
    owner: pihole
    mode: u+rw,g-rwx,o-rwx
  with_items:
    - adlists.list
    - regex.list
    - whitelist.txt
  notify: update pihole gravity
  tags: configuration
- name: Setup dnsmasq configuration
  copy:
    src: files/etc/dnsmasq.d/
    dest: /etc/dnsmasq.d/
    owner: pihole
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
  notify: restart pihole-FTL
  tags: configuration
- name: pihole-FTL is enabled and running
  systemd:
    name: pihole-FTL
    enabled: true
    state: started
  tags: systemctl

- name: Setup Web UI
  when: "'webserver' in ansible_role_names"
  block:
    # Setup PHP
    - name: Install PHP
      pacman:
        name:
          - php
          - php-sqlite
        state: present
      tags: packages
    - name: Enable PHP extensions
      lineinfile:
        dest: /etc/php/php.ini
        regexp: "extension={{ item }}"
        line: "extension={{ item }}"
      with_items:
        - pdo_sqlite
        - sqlite3
        - sockets
      notify: restart php-fpm
      tags: configuration

    # Setup php-fpm
    - name: Install PHP FastCGI Process Manager (FPM)
      pacman:
        name: php-fpm
        state: present
      tags: packages
    - name: Enable sockets PHP extension
      lineinfile:
        dest: /etc/php/php-fpm.d/www.conf
        regexp: "listen ="
        line: "listen = /var/run/php-fpm/fpm-www.sock"
      notify: restart php-fpm
      tags: configuration
    - name: php-fpm is enabled and running
      systemd:
        name: php-fpm
        enabled: true
        state: started
      tags: systemctl

    # Setup nginx
    - name: Setup nginx
      copy:
        src: files/etc/nginx/conf.d/10-host.d/
        dest: /etc/nginx/conf.d/10-host.d/
        owner: http
        mode: u+rw,g-rwx,o-rwx
        directory_mode: u+rwx,g-rwx,o-rwx
      notify: reload nginx
      tags: configuration

- name: Setup monit config
  copy:
    src: files/etc/monitrc.d/
    dest: /etc/monitrc.d/
    owner: root
    group: root
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
  notify: restart monit
  tags: configuration
