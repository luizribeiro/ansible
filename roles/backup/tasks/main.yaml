- name: Install backup software
  package:
    name:
      - restic
      - rclone
    state: present
  tags: packages
- name: Make sure config directory exists
  file:
    path: "{{ rclone_conf_path | dirname }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user_group }}"
    state: directory
    mode: u+rwx,g-rwx,o-rwx
    recurse: yes
  become: yes
  tags: configuration
- name: Setup rclone
  template:
    src: templates/rclone.conf
    dest: "{{ rclone_conf_path }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user_group }}"
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
  become: yes
  tags: configuration
- name: Initialize backup repository
  command: restic init
  become: yes
  environment:
    RESTIC_REPOSITORY: '{{ restic_backup_repo }}'
    RESTIC_PASSWORD: '{{ secret_restic_password }}'
  no_log: false
  register: restic_init
  changed_when: "'created restic repository' in restic_init.stdout"
  failed_when:
    - restic_init.rc != 0
    - not 'already initialized' in restic_init.stderr
  tags: configuration
- name: Setup backup script
  template:
    src: templates/backup.sh
    dest: "{{ backup_script_path }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user_group }}"
    mode: u+rwx,g-rwx,o-rwx
  become: yes
  tags: configuration
- name: Setup backups as a daily cron job
  cron:
    name: Backup
    minute: "0"
    hour: "4"
    user: "{{ backup_user }}"
    job: "{{ backup_script_path }}"
    cron_file: backups
  tags: configuration
- name: Setup monit config
  copy:
    src: files/etc/monitrc.d/
    dest: /etc/monitrc.d/
    owner: "{{ backup_user }}"
    group: "{{ backup_user_group }}"
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
  when: "'server' in ansible_role_names"
  notify: restart monit
  tags: configuration
