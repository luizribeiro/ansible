- name: Install backup software
  package:
    name: restic
    state: present
  tags: packages
- name: Setup excludes file
  lineinfile:
    path: "{{ backup_script_path | dirname }}/backup-excludes.txt"
    line: "{{ item }}"
    create: yes
  become: yes
  with_items: "{{ backup_excludes }}"
- name: Initialize backup repository
  command: restic init
  become: yes
  environment:
    RESTIC_REPOSITORY: '{{ restic_backup_repo }}'
    RESTIC_PASSWORD: '{{ secret_restic_password }}'
    AWS_ACCESS_KEY_ID: '{{ secret_wasabi_access_key }}'
    AWS_SECRET_ACCESS_KEY: '{{ secret_wasabi_secret_key }}'
  no_log: false
  register: restic_init
  changed_when: "'created restic repository' in restic_init.stdout"
  failed_when:
    - restic_init.rc != 0
    - not 'already initialized' in restic_init.stderr
  tags: configuration
- name: Setup backup script
  template:
    src: templates/backup.sh.jinja
    dest: "{{ backup_script_path }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_user_group }}"
    mode: u+rwx,g-rwx,o-rwx
  become: yes
  tags: configuration
- name: Setup backup schedule
  include: "schedule-{{ ansible_distribution | lower }}.yaml"
- block:
  - name: Setup backup-check script
    template:
      src: templates/backup-check.sh.jinja
      dest: "{{ backup_script_path | dirname }}/backup-check.sh"
      owner: "{{ backup_user }}"
      group: "{{ backup_user_group }}"
      mode: u+rwx,g-rwx,o-rwx
    become: yes
  - name: Setup monit config
    copy:
      src: files/etc/monitrc.d/
      dest: /etc/monitrc.d/
      owner: "{{ backup_user }}"
      group: "{{ backup_user_group }}"
      mode: u+rw,g-rwx,o-rwx
      directory_mode: u+rwx,g-rwx,o-rwx
    notify: restart monit
  when: "'server' in ansible_role_names"
  tags: configuration
