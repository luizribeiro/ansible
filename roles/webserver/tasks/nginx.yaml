- name: Install nginx
  pacman:
    name: nginx
    state: present
  tags: packages
- name: Install certbot
  pacman:
    name:
      - certbot-nginx
      - certbot-systemd
    state: present
  tags: packages
- name: Setup nginx.conf
  copy:
    src: files/etc/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: http
    mode: u+rw,g-rwx,o-rwx
    validate: "nginx -t -c %s"
  notify: restart nginx
  tags: configuration
- name: Setup nginx/conf.d
  copy:
    src: files/etc/nginx/conf.d/
    dest: /etc/nginx/conf.d/
    owner: http
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
    # TODO: find a way to validate nginx/conf.d
  notify: reload nginx
  tags: configuration
- name: Setup nginx/conf.d/10-host.conf
  template:
    src: templates/etc/nginx/conf.d/10-host.conf.jinja
    dest: /etc/nginx/conf.d/10-host.conf
    owner: http
    mode: u+rw,g-rwx,o-rwx
  notify: reload nginx
  tags: configuration
- name: Setup /srv/http
  copy:
    src: files/srv/http/
    dest: /srv/http/
    owner: http
    mode: u+rw,g-rwx,o-rwx
    directory_mode: u+rwx,g-rwx,o-rwx
  tags: configuration
- name: Setup /srv/http/host/index.html
  template:
    src: templates/srv/http/host/index.html.jinja
    dest: /srv/http/host/index.html
    owner: http
    mode: u+rw,g-rwx,o-rwx
  tags: configuration
- name: Setup SSL certificate
  command: "certbot certonly -n --nginx -m '{{ letsencrypt_email | mandatory }}' --agree-tos -d {{ inventory_hostname }}"
  args:
    creates: "/etc/letsencrypt/live/{{ inventory_hostname }}/"
  notify: reload nginx
  tags: configuration
- name: Allow HTTP traffic from anywhere
  ufw:
    rule: allow
    port: "80"
  tags: firewall
- name: Allow HTTPS traffic from anywhere
  ufw:
    rule: allow
    port: "443"
  tags: firewall
- name: nginx is enabled and running
  systemd:
    name: nginx
    enabled: yes
    state: started
  tags: systemctl
- name: certbot is enabled and running
  systemd:
    name: certbot.timer
    enabled: yes
    state: started
  tags: systemctl
