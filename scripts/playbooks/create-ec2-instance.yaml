# vim: set ft=yaml.ansible:
---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../../secrets.yaml
  vars:
    aws_region: us-east-2
  environment:
    AWS_ACCESS_KEY: "{{ aws_access_key }}"
    AWS_SECRET_KEY: "{{ aws_secret_key }}"
  tasks:
    - name: Create ec2 instances
      ec2:
        # from https://www.uplinklabs.net/projects/arch-linux-on-ec2/
        # ebs hvm x86_64 stable us-east-2
        image: ami-0dfef6137ada9bde4
        instance_type: "{{ instance_type | default('t3a.nano') }}"
        region: "{{ aws_region }}"
        key_name: GPG
        count: "{{ count | default(1) }}"
        state: present
        wait: true
      register: ec2
    - name: Add instances to hosts file
      lineinfile:
        path: ../../hosts
        regexp: "{{ item.public_dns_name }}"
        line: "{{ item.public_dns_name }}"
        insertafter: "\\[ec2\\]"
      with_items: "{{ ec2.instances }}"
    - name: Create .launched_hosts file
      copy:
        dest: ../../.launched_hosts
        content: "[launched]\n"
    - name: Add instances to .launched_hosts file
      lineinfile:
        path: ../../.launched_hosts
        regexp: "{{ item.public_dns_name }}"
        line: "{{ item.public_dns_name }}"
        insertafter: "\\[launched\\]"
      with_items: "{{ ec2.instances }}"
    - name: Add new instances to launched in-memory launched hosts group
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"
    - name: Restart machines
      ec2:
        instance_ids: "{{ ec2.instance_ids }}"
        region: "{{ aws_region }}"
        state: restarted
        wait: true
    - name: Setup SSH host fingerprints
      include_tasks: ./setup-ec2-host-keys.yaml
      with_items: "{{ ec2.instances }}"

- hosts: launched
  gather_facts: false
  remote_user: arch
  tasks:
    - name: Wait for host to become reachable
      wait_for_connection:

- hosts: launched
  remote_user: arch
  vars_files:
    - ../../secrets.yaml
  become: true
  tasks:
    - name: Upgrade system
      pacman:
        update_cache: true
        upgrade: true
    - name: Reboot machine
      reboot:
    - name: Wait for host to become reachable again
      wait_for_connection:
    - name: Remove locale.gen from the EC2 AMI
      file:
        path: /etc/locale.gen
        state: absent
    - name: Reinstall glibc so locale.gen contents are from Arch Linux
      command: pacman -S --noconfirm glibc
      args:
        creates: /etc/locale.gen

- import_playbook: ../../ec2.yaml
  vars:
    custom_hosts: launched
    custom_remote_user: arch
    custom_ssh_require_2fac: true
