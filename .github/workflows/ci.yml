---
name: CI

on: [push]

jobs:
  setup-venv:
    # vagrant and virtualization is only available on macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: syphar/restore-virtualenv@v1.1
        id: venv-cache

      - uses: abatilo/actions-poetry@v2.1.0
        if: steps.setup-venv.outputs.cache-hit != 'true'
      - name: Install Python dependencies
        run: poetry install -vv
        if: steps.setup-venv.outputs.cache-hit != 'true'

  lint:
    runs-on: macos-latest
    needs: setup-venv
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: syphar/restore-virtualenv@v1.1
        id: venv-cache

      - name: Install Ansible Galaxy requirements
        run: poetry run ansible-galaxy install -r requirements.yml

      - name: Run Ansible Lint against playbooks
        run: poetry run ansible-lint
      - name: Run YAML Lint
        run: poetry run yamllint -f github .

      - name: Run Python static analysis checks
        run: poetry run pyre --noninteractive

  molecule-tests:
    runs-on: macos-latest
    needs: setup-venv
    strategy:
      max-parallel: 4
      matrix:
        role-to-test: [pihole, server, monit]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: syphar/restore-virtualenv@v1.1
        id: venv-cache

      - name: Install Ansible Galaxy requirements
        run: poetry run ansible-galaxy install -r requirements.yml
      - name: Run molecule tests
        run: |
          cd roles/${{ matrix.role-to-test }}/
          poetry run molecule test
